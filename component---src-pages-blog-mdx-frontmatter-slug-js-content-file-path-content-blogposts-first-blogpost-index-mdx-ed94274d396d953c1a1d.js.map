{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-content-blogposts-first-blogpost-index-mdx-ed94274d396d953c1a1d.js","mappings":"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","sources":["webpack://3dar/./content/blogposts/first-blogpost/index.mdx","webpack://3dar/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://3dar/./src/components/PostPage/postpage.styles.jsx","webpack://3dar/./src/components/PostPage/index.jsx","webpack://3dar/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Intro\"), \"\\n\", React.createElement(_components.p, null, \"Perhaps each of us dreams of turning our ideas into reality. And I am no exception. I have a great passion for architecture, and recently I decided to bring my dream to life by creating the first architectural scene in Unreal Engine 5 (UE5).\"), \"\\n\", React.createElement(_components.h2, null, \"Some preparation\"), \"\\n\", React.createElement(_components.p, null, \"But let's start with the fact that I am not a professional game developer or architect. My experience with UE5 is at a beginner level. Behind me, I only have experience visualizing static images directly from 3D applications. But static images are boring. It's a different story with videos or the ability to interact with objects through VR! And for this, a tool like Unreal Engine 5 is perfect. However, learning this tool is quite a challenge and a step out of my comfort zone.\"), \"\\n\", React.createElement(_components.p, null, \"The first step in my journey will be studying the documentation provided by Epic Games for UE5. The documentation provides detailed information about the engine's features and capabilities, as well as usage examples. I have devoted a lot of time to understanding the fundamental concepts such as levels, actors, materials, and lighting. This will allow me to grasp the basic principles of working with the engine and start building my own architectural scene.\"), \"\\n\", React.createElement(_components.p, null, \"In addition to the documentation, I will actively use the internet and YouTube tutorials to learn more specialized topics. On YouTube, I have already found numerous tutorials where experienced developers share their knowledge and techniques for working with UE5. Modeling methods, material creation, lighting setup, and more - everything is freely accessible.\"), \"\\n\", React.createElement(_components.h2, null, \"Planning\"), \"\\n\", React.createElement(_components.p, null, \"My idea is to create a video presentation of a cottage location in the forest. I want to convey the atmosphere of coziness and tranquility that can be found in such a place. The goal for the first time is not to overly complicate the entire process. For the first experience, I think I will limit myself to creating a video presentation of the location.\"), \"\\n\", React.createElement(_components.h3, null, \"The plan is approximately as follows:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Compile a mood board from Pinterest and various specialized architectural websites.\"), \"\\n\", React.createElement(_components.li, null, \"Based on the gathered information, create (or find) a house model.\"), \"\\n\", React.createElement(_components.li, null, \"Create the landscape and a multi-layered material for it.\"), \"\\n\", React.createElement(_components.li, null, \"Play the roles of a forester and a gardener by placing the necessary vegetation in the scene.\"), \"\\n\", React.createElement(_components.li, null, \"Work with the camera.\"), \"\\n\", React.createElement(_components.li, null, \"Output the video stream.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"In the next post, I will provide detailed information about the process of creating the cottage in the forest. We will explore every aspect of modeling, texturing, and lighting setup to create a realistic and cozy cottage. Join me in this exciting adventure in the world of architectural visualization in UE5!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"D:/work/gatsby/3dar/content/blogposts/first-blogpost/index.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../../components/layout/layout';\nimport {PostPage} from '../../components/PostPage';\nimport Seo from '../../components/seo/seo';\nconst StyledFrame = (styled.div)`\n  margin: auto;\n  padding-top: 20px;\n  padding-left: 30px;\n  padding-right: 30px;\n  width: 100%;\n  height: 100%;\n  color: #022;\n  background-color: #f8f8f8;\n\n  & h1 {\n    font-weight: bold;\n    font-size: 2.2rem;\n    padding: 0.5rem;\n    text-indent: 30px;\n  }\n\n  & h2 {\n    font-size: 2rem;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    padding: 0.5rem;\n    text-indent: 30px;\n  }\n  & h3 {\n    font-size: 1.5rem;\n    font-weight: bold;\n    padding: 0.5rem;\n    text-indent: 30px;\n  }\n  & p,\n  ol {\n    font-size: 1.3rem;\n    padding: 0.5rem;\n    text-align: justify;\n    text-indent: 30px;\n    letter-spacing: -0.016em;\n  }\n  & ol {\n    font-size: 1rem;\n    list-style-type: decimal;\n    list-style-position: inside;\n  }\n  & li {\n    line-height: 1.5rem;\n    font-size: 1.1rem;\n  }\n`;\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, null, React.createElement(PostPage, {\n    data: data\n  }, React.createElement(StyledFrame, null, children)));\n};\nexport const data = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n        slug\n        tags\n        coverimage\n        altTextCoverImage\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import styled from 'styled-components'\r\n\r\nexport const StyledFrame = styled.div`\r\n  background-color: #f8f8f8;\r\n  height: 379px;\r\n  padding: 14px;\r\n  margin: 30px auto;\r\n  letter-spacing: -0.016em;\r\n\r\n  width: 824px;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n  .postcontentbackground {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 14px;\r\n    background-color: #f8f8f8;\r\n  }\r\n\r\n  & .div {\r\n    align-items: flex-end;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    gap: 33px;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  & .text-wrapper {\r\n    align-self: stretch;\r\n    color: #000000;\r\n    font-family: 'Inter-Bold', Helvetica;\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n\r\n    line-height: normal;\r\n\r\n    @media (max-width: 768px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n\r\n  & .div-2 {\r\n    align-items: flex-end;\r\n    display: inline-flex;\r\n    flex: 0 0 auto;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  & .group {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n    width: 160px;\r\n  }\r\n\r\n  & .tag {\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n\r\n  & .tagtext {\r\n    margin-bottom: 1px;\r\n  }\r\n\r\n  & .overlap-group {\r\n    background-color: #212937;\r\n    border-radius: 9px;\r\n    height: 20px;\r\n    position: relative;\r\n    width: 50px;\r\n  }\r\n\r\n  & .text-wrapper-2 {\r\n    color: #ffffff;\r\n    font-family: 'Inter-Regular', Helvetica;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    left: 11px;\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: absolute;\r\n    top: 2px;\r\n  }\r\n\r\n  & .overlap-wrapper {\r\n    height: 20px;\r\n    left: 79px;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 83px;\r\n  }\r\n\r\n  & .overlap {\r\n    background-color: #212937;\r\n    border-radius: 9px;\r\n    height: 20px;\r\n    position: relative;\r\n    width: 81px;\r\n  }\r\n\r\n  & .text-wrapper-3 {\r\n    color: #000000;\r\n    font-family: 'Inter-Regular', Helvetica;\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: fit-content;\r\n  }\r\n\r\n  & .rectangle {\r\n    flex: 1;\r\n    flex-grow: 1;\r\n    height: 350px;\r\n    max-width: 50%;\r\n    position: relative;\r\n    object-fit: cover;\r\n  }\r\n\r\n  & .contentent-wrapper {\r\n    padding-top: 0px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StyledFrame } from './postpage.styles'\r\n\r\nconst PostPage = ({ data, children }) => {\r\n  return (\r\n    <>\r\n      <div className=\"bg-[#f8f8f8] mt-[-30px]\">\r\n        <StyledFrame>\r\n          <div className=\"postcontentbackground\">\r\n            <div className=\"div\">\r\n              <h1 className=\"text-wrapper\">{data.mdx.frontmatter.title}</h1>\r\n              <div className=\"div-2\">\r\n                <div className=\"group\">\r\n                  {data.mdx.frontmatter.tags.map((tag) => {\r\n                    return (\r\n                      <div\r\n                        key={tag}\r\n                        className=\"tag bg-blue_gray-900 text-white-A700 rounded-[9px] px-2\"\r\n                      >\r\n                        <p className=\"tagtext\">{tag}</p>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n                <div className=\"text-wrapper-3\">\r\n                  Date: {data.mdx.frontmatter.date}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className=\"rectangle\"\r\n              alt={data.mdx.frontmatter.altTextCoverImage}\r\n              src={`../../images/${data.mdx.frontmatter.coverimage}`}\r\n            />\r\n          </div>\r\n        </StyledFrame>\r\n      </div>\r\n      <div className=\"contentent-wrapperbg-white-A700 w-[90%] mx-auto p-5\">\r\n        {children}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { PostPage }\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","ol","li","_provideComponents","components","React","wrapper","MDXLayout","StyledFrame","styled","div","withConfig","displayName","componentId","BlogPost","_ref","data","children","Layout","PostPage","Head","_ref2","Seo","title","mdx","frontmatter","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","className","tags","map","tag","key","date","alt","altTextCoverImage","src","coverimage","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}